<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>